<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>